<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>